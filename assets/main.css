/*------------------------------------*\
    YOUR-PROJECT.CSS
\*------------------------------------*/
/**
 * 
 * sass --watch your-project.scss:your-project.min.css --style compressed
 * 
 * Here we set up some variables, include the inuit.css framework, then add our
 * project-specific components afterwards.
 */
/**
 * Setup
 */
/*------------------------------------*\
    $VARS
\*------------------------------------*/
/**
 * Set up project-specific variables here which are then used throughout your
 * build. These variables are automatically picked up by inuit.css so you should
 * never need to modify any framework code.
 */
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/**
 * Base stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/**
 * Responsiveness?
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/**
 * Brand stuff
 */
/**
 * inuit.css will work these next ones out for you.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    INUIT.CSS
\*------------------------------------*/
/*!*
 * 
 * inuitcss.com -- @inuitcss -- @csswizardry
 * 
 */
/**
 * inuit.css acts as a base stylesheet which you should extend with your own
 * theme stylesheet.
 * 
 * inuit.css aims to do the heavy lifting; sorting objects and abstractions,
 * design patterns and fiddly bits of CSS, whilst leaving as much design as
 * possible to you. inuit.css is the scaffolding to your decorator.
 * 
 * This stylesheet is heavily documented and contains lots of comments, please
 * take care to read and refer to them as you build. For further support please
 * tweet at @inuitcss.
 * 
 * Owing to the amount of comments please only ever use minified CSS in
 * production. This file is purely a dev document.
 * 
 * The table of contents below maps to section titles of the same name, to jump
 * to any section simply run a find for $[SECTION-TITLE].
 * 
 * Most objects and abstractions come with a chunk of markup that you should be
 * able to paste into any view to quickly see how the CSS works in conjunction
 * with the correct HTML.
 * 
 * inuit.css is written to this standard: github.com/csswizardry/CSS-Guidelines
 * 
 * LICENSE
 * 
 * Copyright 2012 Harry Roberts
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Thank you for choosing inuit.css. May your floats remain cleared.
 */
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You're reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 * 
 * MIXINS..............Super-simple Sass stuff
 * NORMALIZE...........normalize.css
 * RESET...............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 * 
 * MAIN................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * SMALLPRINT..........Smaller text elements like `small`
 * QUOTES..............
 * CODE................
 * LINKS...............
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 * 
 * GRIDS...............Fluid, proportional and nestable grids
 * FLEXBOX.............Crudely emulate flexbox
 * COLUMNS.............CSS3 columns
 * NAV.................A simple abstraction to put a list in horizontal nav mode
 * OPTIONS.............Grouped nav items
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 * MARGINALIA..........Simple marginalia content
 * ISLAND..............Boxed off content
 * BLOCK-LIST..........Blocky lists of content
 * MATRIX..............Gridded lists
 * SPLIT...............A simple split-in-two object
 * THIS-OR-THIS........Options object
 * LINK-COMPLEX........
 * FLYOUT..............Flyout-on-hover object
 * ARROWS..............CSS arrows
 * SPRITE..............Generic spriting element
 * ICON-TEXT...........Icon and text couplings
 * BUTTONS.............
 * LOZENGES............Basic lozenge styles
 * RULES...............Horizontal rules
 * STATS...............Simple stats object
 * GREYBOX.............Wireframing styles
 * 
 * WIDTHS..............Width classes for use alongside the grid system etc.
 * PUSH................Push classes for manipulating grids
 * PULL................Pull classes for manipulating grids
 * BRAND...............Helper class to apply brand treatment to elements
 * HELPER..............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 * 
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 * 
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 * 
   `@include font-size(10px);`
 * 
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 * 
   `@include vendor(border-radius, 4px);`
 * 
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 * 
   .foo{
       @include vendor(animation, shrink 3s);
   }
   
   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 * 
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 * 
   `@include truncate(100%);`
 * 
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 * 
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 * 
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 * 
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 * 
 * `@include arrow(top, left, red)`
 * 
 * for just a single, red arrow, or:
 * 
 * `@include arrow(bottom, center, red, black)`
 * 
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus: 
 * 
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 * 
 */
/**
 * Media query mixin.
 *
 * It's not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you'll want a
 * change at 'mobile'. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It's flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 * 
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * 
 * Not using a media query will, naturally, serve styles to all devices.
 * 
 * `@include media-query(palm){ [styles here] }`
 * 
 * We work out your end points for you:
 */
/*! normalize.css v2.0.1 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Corrects `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block; }

/*
 * Corrects `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/*
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Addresses styling for `hidden` attribute not present in IE 8/9.
 */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Sets default font family to sans-serif.
 * 2. Prevents iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Removes default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Addresses `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/*
 * Improves readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Addresses `h1` font sizes within `section` and `article` in Firefox 4+,
 * Safari 5, and Chrome.
 */
h1 {
  font-size: 2em; }

/*
 * Addresses styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Addresses style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/*
 * Addresses styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/*
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/*
 * Corrects font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/*
 * Improves readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

/*
 * Sets consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/*
 * Addresses inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/*
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Removes border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/*
 * Corrects overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Addresses margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Corrects color not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Corrects font family not being inherited in all browsers.
 * 2. Corrects font size not being inherited in all browsers.
 * 3. Addresses margins set differently in Firefox 4+, Safari 5, and Chrome
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/*
 * Addresses Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Corrects inability to style clickable `input` types in iOS.
 * 3. Improves usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
input[disabled] {
  cursor: default; }

/*
 * 1. Addresses box sizing set to `content-box` in IE 8/9.
 * 2. Removes excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/*
 * Removes inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Removes inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Removes default vertical scrollbar in IE 8/9.
 * 2. Improves readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart... 
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let's make the box model all nice, shall we...?
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
a, u, ins {
  text-decoration: none; }

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/**
 * So that `alt` text is visually offset if images don't load.
 */
img {
  font-style: italic; }

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer; }

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none; }

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: nicolasgallagher.com/micro-clearfix-hack
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.cf, .gw,
.grid-wrapper, .nav, .post {
  zoom: 1; }
  .cf:before, .gw:before,
  .grid-wrapper:before, .nav:before, .post:before, .cf:after, .gw:after,
  .grid-wrapper:after, .nav:after, .post:after {
    content: " ";
    display: table; }
  .cf:after, .gw:after,
  .grid-wrapper:after, .nav:after, .post:after {
    clear: both; }

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
h1, h2, h3, h4, h5, h6, hgroup, ul, ol, dl, blockquote, p, address, table, fieldset, figure, pre, .form-fields > li, .post div.highlighter-shiki, .media, .island, .islet {
  margin-bottom: 32px;
  margin-bottom: 1.7777777778rem; }
  .islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup,
  .islet ul,
  .islet ol,
  .islet dl,
  .islet blockquote,
  .islet p,
  .islet address,
  .islet table,
  .islet fieldset,
  .islet figure,
  .islet pre,
  .islet .form-fields > li,
  .islet .post div.highlighter-shiki,
  .post .islet div.highlighter-shiki,
  .islet .media,
  .islet .island,
  .islet .islet {
    margin-bottom: 16px;
    margin-bottom: 0.8888888889rem; }

/**
 * Doubled up `margin-bottom` helper class.
 */
.landmark {
  margin-bottom: 64px;
  margin-bottom: 3.5555555556rem; }

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr {
  margin-bottom: 30px;
  margin-bottom: 1.6666666667rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul, ol, dd {
  margin-left: 64px;
  margin-left: 3.5555555556rem; }

/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $MAIN
\*------------------------------------*/
html {
  font: 1.125em/1.7777777778 serif;
  overflow-y: scroll;
  min-height: 100%; }

/*------------------------------------*\
    $HEADINGS
\*------------------------------------*/
/**
 * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 * 
 * When we define a heading we also define a corresponding class to go with it.
 * This allows us to apply, say, `class=alpha` to a `h3`; a double-stranded
 * heading hierarchy.
 */
h1, .alpha, .post--featured .post__header,
.post__heading--alpha {
  font-size: 36px;
  font-size: 2rem;
  line-height: 1.7777777778; }

h2, .beta, .post__heading--beta {
  font-size: 30px;
  font-size: 1.6666666667rem;
  line-height: 1.0666666667; }

h3, .gamma, .post__heading--gamma {
  font-size: 24px;
  font-size: 1.3333333333rem;
  line-height: 1.3333333333; }

h4, .delta {
  font-size: 20px;
  font-size: 1.1111111111rem;
  line-height: 1.6; }

h5, .epsilon {
  font-size: 16px;
  font-size: 0.8888888889rem;
  line-height: 2; }

h6, .zeta {
  font-size: 14px;
  font-size: 0.7777777778rem;
  line-height: 2.2857142857; }

/**
 * Heading groups and generic any-heading class.
 * To target any heading of any level simply apply a class of `.hN`, e.g.:
 * 
   <hgroup>
       <h1 class=hN>inuit.css</h1>
       <h2 class=hN>Best. Framework. Ever!</h2>
   </hgroup>
 * 
 */
hgroup .hN {
  margin-bottom: 0; }

/**
 * A series of classes for setting massive type; for use in heroes, mastheads,
 * promos, etc.
 */
.giga {
  font-size: 70px;
  font-size: 3.8888888889rem;
  line-height: 1.3714285714; }

.mega, .site-title {
  font-size: 54px;
  font-size: 3rem;
  line-height: 1.1851851852; }

.kilo {
  font-size: 48px;
  font-size: 2.6666666667rem;
  line-height: 1.3333333333; }

/*------------------------------------*\
    $PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger.
 */
.lede,
.lead {
  font-size: 20.25px;
  font-size: 1.125rem;
  line-height: 1.5802469136; }

/*------------------------------------*\
    $SMALLPRINT
\*------------------------------------*/
/**
 * A series of classes for setting tiny type; for use in smallprint etc.
 */
.smallprint,
.milli {
  font-size: 12px;
  font-size: 0.6666666667rem;
  line-height: 2.6666666667; }

.micro {
  font-size: 10px;
  font-size: 0.5555555556rem;
  line-height: 3.2; }

/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * Big up @boblet: html5doctor.com/blockquote-q-cite
 */
q {
  quotes: "'" "'" '"' '"'; }

q:before {
  content: "'";
  content: open-quote; }

q:after {
  content: "'";
  content: close-quote; }

q q:before {
  content: '"';
  content: open-quote; }

q q:after {
  content: '"';
  content: close-quote; }

blockquote {
  quotes: '"' '"'; }

blockquote p:before {
  content: '"';
  content: open-quote; }

blockquote p:after {
  content: "";
  content: no-close-quote; }

blockquote p:last-of-type:after {
  content: '"';
  content: close-quote; }

/**
 * 
   <blockquote>
       <p>Insanity: doing the same thing over and over again and expecting
       different results.</p>
       <b class=source>Albert Einstein</b>
   </blockquote>
 * 
 */
blockquote {
  /**
   * .4em is roughly equal to the width of the opening " that we wish to hang.
   */
  text-indent: -0.4em; }
  blockquote p:last-of-type {
    margin-bottom: 0; }

.source {
  display: block;
  text-indent: 0; }
  .source:before {
    content: "-"; }

/*------------------------------------*\
    $CODE
\*------------------------------------*/
/**
 * Use an explicit font stack to ensure browsers render correct `line-height`.
 */
pre {
  overflow: auto; }

pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit; }

/**
 * Add comments to your code examples, e.g.:
 * 
   <code>&lt;/div&gt;<span class=code-comment>&lt;!-- /wrapper --&gt;</span></code>
 * 
 */
.code-comment {
  /**
   * Override this setting in your theme stylesheet
   */
  opacity: 0.75;
  filter: alpha(opacity=75); }

/**
 * You can add line numbers to your code examples but be warned, it requires
 * some pretty funky looking markup, e.g.:
 * 
   <ol class=line-numbers>
       <li><code>.nav{</code></li>
       <li><code>    list-style:none;</code></li>
       <li><code>    margin-left:0;</code></li>
       <li><code>}</code></li>
       <li><code>    .nav > li,</code></li>
       <li><code>        .nav > li > a{</code></li>
       <li><code>            display:inline-block;</code></li>
       <li><code>           *display:inline-block;</code></li>
       <li><code>            zoom:1;</code></li>
       <li><code>        }</code></li>
   </ol>
 * 
 * 1. Make the list look like code.
 * 2. Give the list flush numbers with a leading zero.
 * 3. Make sure lines of code don't wrap.
 * 4. Give the code form by forcing the `code` to honour white-space.
 */
.line-numbers {
  font-family: monospace, serif;
  /* [1] */
  list-style: decimal-leading-zero inside;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  overflow: auto;
  /* [3] */
  margin-left: 0; }

.line-numbers code {
  white-space: pre;
  /* [4] */ }

/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/**
 * Say no to negative hovers, as per: csswizardry.com/2011/05/on-negative-hovers
 *
 * Sometimes, particularly on larger projects, it is useful to scope link
 * styling only to anchors which have `href` attributes.
 */
a {
  /**
   * Set colors etc in your theme stylesheet.
   */ }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

/**
 * 'Current' states, e.g.:
 * 
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li class=current><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 * 
 */
.current > a {
  cursor: text;
  text-decoration: underline; }

/*------------------------------------*\
    $IMAGES
\*------------------------------------*/
/**
 * Demo: jsfiddle.net/inuitcss/yMtur
 */
img {
  max-width: 100%;
  height: auto; }

/**
 * Image placement variations.
 */
.img--right {
  float: right;
  margin-bottom: 32px;
  margin-left: 32px; }

.img--left {
  float: left;
  margin-right: 32px;
  margin-bottom: 32px; }

.img--center {
  display: block;
  margin-right: auto;
  margin-bottom: 32px;
  margin-left: auto; }

/**
 * Keep your images on your baseline.
 * 
 * Please note, these will not work too nicely with fluid images and will
 * distort when resized below a certain width. Use with caution.
 */
.img--short {
  height: 160px; }

.img--medium {
  height: 320px; }

.img--tall {
  height: 480px; }

/**
 * Images in `figure` elements.
 */
figure > img {
  display: block; }

/*------------------------------------*\
    $LISTS
\*------------------------------------*/
/**
 * Remove vertical spacing from nested lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/**
 * Have a numbered `ul` without the semantics implied by using an `ol`.
 */
/*ul*/
.numbered-list {
  list-style-type: decimal; }

/*------------------------------------*\
    $TABLES
\*------------------------------------*/
/**
 * We have a lot at our disposal for making very complex table constructs, e.g.:
 *
   <table class="table--bordered  table--striped  table--data">
       <colgroup>
           <col class=t10>
           <col class=t10>
           <col class=t10>
           <col>
       </colgroup>
       <thead>
           <tr>
               <th colspan=3>Foo</th>
               <th>Bar</th>
           </tr>
           <tr>
               <th>Lorem</th>
               <th>Ipsum</th>
               <th class=numerical>Dolor</th>
               <th>Sit</th>
           </tr>
       </thead>
       <tbody>
           <tr>
               <th rowspan=3>Sit</th>
               <td>Dolor</td>
               <td class=numerical>03.788</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>32.210</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>47.797</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <th rowspan=2>Sit</th>
               <td>Dolor</td>
               <td class=numerical>09.640</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>12.117</td>
               <td>Lorem</td>
           </tr>
       </tbody>
   </table>
 *
 */
table {
  width: 100%; }

th,
td {
  padding: 8px;
  text-align: left; }
  @media screen and (min-width: 480px) {
    th,
    td {
      padding: 16px; } }

/**
 * Cell alignments
 */
[colspan] {
  text-align: center; }

[colspan="1"] {
  text-align: left; }

[rowspan] {
  vertical-align: middle; }

[rowspan="1"] {
  vertical-align: top; }

.numerical {
  text-align: right; }

/**
 * In the HTML above we see several `col` elements with classes whose numbers
 * represent a percentage width for that column. We leave one column free of a
 * class so that column can soak up the effects of any accidental breakage in
 * the table.
 */
.t5 {
  width: 5%; }

.t10 {
  width: 10%; }

.t12 {
  width: 12.5%; }

/* 1/8 */
.t15 {
  width: 15%; }

.t20 {
  width: 20%; }

.t25 {
  width: 25%; }

/* 1/4 */
.t30 {
  width: 30%; }

.t33 {
  width: 33.333%; }

/* 1/3 */
.t35 {
  width: 35%; }

.t37 {
  width: 37.5%; }

/* 3/8 */
.t40 {
  width: 40%; }

.t45 {
  width: 45%; }

.t50 {
  width: 50%; }

/* 1/2 */
.t55 {
  width: 55%; }

.t60 {
  width: 60%; }

.t62 {
  width: 62.5%; }

/* 5/8 */
.t65 {
  width: 65%; }

.t66 {
  width: 66.666%; }

/* 2/3 */
.t70 {
  width: 70%; }

.t75 {
  width: 75%; }

/* 3/4*/
.t80 {
  width: 80%; }

.t85 {
  width: 85%; }

.t87 {
  width: 87.5%; }

/* 7/8 */
.t90 {
  width: 90%; }

.t95 {
  width: 95%; }

/**
 * Bordered tables
 */
.table--bordered th,
.table--bordered td {
  border: 1px solid #ccc;
  /* Override this color in your theme stylesheet */ }
  .table--bordered th:empty,
  .table--bordered td:empty {
    border: none; }
.table--bordered thead tr:last-child th {
  border-bottom-width: 2px; }
.table--bordered tbody tr th:last-of-type {
  border-right-width: 2px; }

/**
 * Striped tables
 */
.table--striped tbody tr:nth-of-type(odd) {
  background-color: #ffc;
  /* Override this color in your theme stylesheet */ }

/**
 * Data table
 */
.table--data {
  font: 12px/1.5 sans-serif; }

/*------------------------------------*\
    $FORMS
\*------------------------------------*/
/**
 * 
 * Demo: jsfiddle.net/inuitcss/MhHHU
 * 
 */
fieldset {
  padding: 32px; }

/**
 * Text inputs
 * 
 * Instead of a `[type]` selector for each kind of form input, we just use a
 * class to target any/every one, e.g.:
   <input type=text class=text-input>
   <input type=email class=text-input>
   <input type=password class=text-input>
 * 
 */
.text-input,
textarea {
  /**
   * Style these via your theme stylesheet.
   */ }

/**
 * Group sets of form fields in a list, e.g.:
 * 
   <ul class=form-fields>
       <li>
           <label />
           <input />
       </li>
       <li>
           <label />
           <select />
       </li>
       <li>
           <label />
           <input />
       </li>
   </ul>
 * 
 */
.form-fields {
  list-style: none;
  margin: 0; }

.form-fields > li:last-child {
  margin-bottom: 0; }

/**
 * Labels
 * 
 * Define a `.label` class as well as a `label` element. This means we can apply
 * label-like styling to meta-labels for groups of options where a `label`
 * element is not suitable, e.g.:
 * 
   <li>
       <span class=label>Select an option below:</span>
       <ul class="multi-list  four-cols">
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 * 
 */
label,
.label {
  display: block; }

/**
 * Extra help text in `label`s, e.g.:
 * 
   <label>Card number <small class=additional>No spaces</small></label>
 * 
 */
.additional {
  display: block;
  font-weight: normal; }

/*
 * Groups of checkboxes and radios, e.g.:
 * 
   <li>
       <ul class=check-list>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 * 
 */
.check-list {
  list-style: none;
  margin: 0; }

/*
 * Labels in check-lists
 */
.check-label,
.check-list label,
.check-list .label {
  display: inline-block; }

/**
 * Spoken forms are for forms that read like spoken word, e.g.:
 * 
   <li class=spoken-form>
       Hello, my <label for=spoken-name>name</label> is
       <input type=text class=text-input id=spoken-name>. My home
       <label for=country>country</label> is
       <select id=country>
           <option>UK</option>
           <option>US</option>
           <option>Other</option>
       </select>
   </li>
 * 
 */
.spoken-form label {
  display: inline-block;
  font: inherit; }

/**
 * Extra help text displayed after a field when that field is in focus, e.g.:
 * 
   <label for=email>Email:</label>
   <input type=email class=text-input id=email> 
   <small class=extra-help>.edu emails only</small>
 * 
 * We leave the help text in the document flow and merely set it to
 * `visibility:hidden;`. This means that it won't interfere with anything once
 * it reappears.
 * 
 */
/*small*/
.extra-help {
  display: inline-block;
  visibility: hidden; }

.text-input:active + .extra-help,
.text-input:focus + .extra-help {
  visibility: visible; }

/**
 * Objects and abstractions
 * 
 * Single-line comment (//) out any objects you do not need in your project.
 */
/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * Fluid and nestable grid system, e.g.:
 * 
   <div class=gw>
       
       <div class="g  one-third">
           <p>One third grid</p>
       </div>
       
       <div class="g  two-thirds">
           <p>Two thirds grid</p>
       </div>
       
       <div class="g  one-half">
           <p>One half grid</p>
       </div>
       
       <div class="g  one-quarter">
           <p>One quarter grid</p>
       </div>
       
       <div class="g  one-quarter">
           <p>One quarter grid</p>
       </div>
       
   </div>
 * 
 * Demo: jsfiddle.net/inuitcss/CLYUC
 * 
 */
/**
 * Grid wrapper
 * 
 * Shorthand and verbose
 */
.gw,
.grid-wrapper {
  /**
   * Negative margin to negate the padding on the first grid child. 
   */
  margin-left: -32px;
  /**
   * The following declarations allow us to use the `.gw` class on lists.
   */
  list-style: none;
  margin-bottom: 0; }

/**
 * Reverse grid order
 * 
   <div class="gw  gw--rev">
       
       <div class="g  one-third">
           <p>Appears on the right</p>
       </div>
       
       <div class="g  two-thirds">
           <p>Appears on the left</p>
       </div>
       
   </div>
 * 
 */
.gw--rev > .g,
.grid-wrapper--rev > .grid {
  float: right; }

/**
 * Very infrequently occuring grid wrappers as children of grid wrappers.
 */
.gw > .gw,
.grid-wrapper > .grid-wrapper {
  margin-left: 0; }

/**
 * Grid
 * 
 * Shorthand and verbose
 */
.g,
.grid {
  float: left;
  padding-left: 32px; }

/*------------------------------------*\
    $NAV
\*------------------------------------*/
/**
 * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
 * When used on an `ol` or `ul`, this class throws the list into horizontal mode
 * e.g.:
 * 
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 * 
 * Demo: jsfiddle.net/inuitcss/Vnph4
 * 
 */
.nav {
  list-style: none;
  margin-left: 0; }
  .nav > li,
  .nav > li > a {
    display: inline-block;
    *display: inline;
    zoom: 1; }

/**
 * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
 * 
   <ul class="nav  nav--stacked">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 * 
 */
.nav--stacked > li {
  display: list-item; }
  .nav--stacked > li > a {
    display: block; }

/**
 * `.nav--banner` extends `.nav` and centres the list, e.g.:
 * 
   <ul class="nav  nav--banner">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 * 
 */
.nav--banner {
  text-align: center; }

/**
 * Give nav links a big, blocky hit area. Extends `.nav` and needs whitespace
 * caused by `inline-block` elements collapsing e.g.:
 * 
   <ul class="nav  nav--block">
       <li><a href=#>Home</a></li><!--
    --><li><a href=#>About</a></li><!--
    --><li><a href=#>Portfolio</a></li><!--
    --><li><a href=#>Contact</a></li>
   </ul>
 * 
 */
.nav--block {
  line-height: 1; }
  .nav--block > li > a {
    padding: 16px; }

/**
 * Force a nav to occupy 100% of the available width of its parent. Extends
 * `.nav`, e.g.:
 * 
   <ul class="nav  nav--fit">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 * 
 * Thanks to @pimpl for this idea!
 */
.nav--fit {
  display: table;
  width: 100%; }
  .nav--fit > li {
    display: table-cell; }
    .nav--fit > li > a {
      display: block; }

/**
 * Make a list of keywords. Extends `.nav`, e.g.:
 * 
   `<ul class="nav  nav--keywords>`
 * 
 */
.nav--keywords > li:after {
  content: ", "; }
.nav--keywords > li:last-child:after {
  display: none; }

/*------------------------------------*\
    $BLOCK-LIST
\*------------------------------------*/
/**
 * Create big blocky lists of content, e.g.:
 * 
   <ul class=block-list>
      <li>Foo</li>
      <li>Bar</li>
      <li>Baz</li>
      <li><a href=# class=block-list__link>Foo Bar Baz</a></li>
   </ul>
 * 
 * Extend this object in your theme stylesheet.
 * 
 * Demo: jsfiddle.net/inuitcss/hR57q
 * 
 */
.block-list,
.block-list > li {
  border: 0 solid #ccc;
  /* Override this color in your theme stylesheet */ }

.block-list {
  list-style: none;
  margin-left: 0;
  border-top-width: 1px; }
  .block-list > li {
    border-bottom-width: 1px;
    padding: 16px; }

.block-list__link {
  display: block;
  padding: 16px;
  margin: -16px; }

/*------------------------------------*\
    $BUTTONS
\*------------------------------------*/
/**
 * Basic button structural styling. Extend in your theme stylesheet.
 * 
 * Demo: jsfiddle.net/inuitcss/RqHcp
 * 
 */
.btn {
  font: inherit;
  cursor: pointer;
  border: none;
  display: inline-block;
  margin: 0;
  line-height: 1;
  /**
   * Set padding in ems so we can change the size of a button by merely
   * altering its `font-size`.
   */
  padding: 0.5em; }

.btn,
.btn:hover {
  text-decoration: none; }

/**
 * Basic button modifiers
 */
.btn--sml {
  font-size: .75em; }

.btn--lrg {
  font-size: 1.50em; }

.btn--full {
  display: block;
  text-align: center;
  /**
   * The following is so that `.btn-full` works properly on `input`s as well
   * as `a`s.
   */
  padding-right: 0;
  padding-left: 0;
  width: 100%; }

/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */
/**
* Whole
*/
.one-whole {
  width: 100%; }

/**
* Halves
*/
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%; }

/**
* Thirds
*/
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%; }

.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%; }

/**
* Quarters
*/
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%; }

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%; }

/**
* Fifths
*/
.one-fifth, .two-tenths {
  width: 20%; }

.two-fifths, .four-tenths {
  width: 40%; }

.three-fifths, .six-tenths {
  width: 60%; }

.four-fifths, .eight-tenths {
  width: 80%; }

/**
* Sixths
*/
.one-sixth, .two-twelfths {
  width: 16.666%; }

.five-sixths, .ten-twelfths {
  width: 83.333%; }

/**
* Eighths
*/
.one-eighth {
  width: 12.5%; }

.three-eighths {
  width: 37.5%; }

.five-eighths {
  width: 62.5%; }

.seven-eighths {
  width: 87.5%; }

/**
* Tenths
*/
.one-tenth {
  width: 10%; }

.three-tenths {
  width: 30%; }

.seven-tenths {
  width: 70%; }

.nine-tenths {
  width: 90%; }

/**
* Twelfths
*/
.one-twelfth {
  width: 8.333%; }

.five-twelfths {
  width: 41.666%; }

.seven-twelfths {
  width: 58.333%; }

.eleven-twelfths {
  width: 91.666%; }

/**
 * If you have set `$responsive` to 'true' in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoing you'd like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter  lap-one-half  palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at 'desktop' sizes, takes up a quarter of the
 * horizontal space, a half of that space at 'tablet' sizes, and goes full width
 * at 'mobile' sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */
@media only screen and (max-width: 699px) {
  /**
  * Whole
  */
  .palm-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  .palm-one-half, .palm-two-quarters, .palm-three-sixths, .palm-four-eighths, .palm-five-tenths, .palm-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  .palm-one-third, .palm-two-sixths, .palm-four-twelfths {
    width: 33.333%; }

  .palm-two-thirds, .palm-four-sixths, .palm-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  .palm-one-quarter, .palm-two-eighths, .palm-three-twelfths {
    width: 25%; }

  .palm-three-quarters, .palm-six-eighths, .palm-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  .palm-one-fifth, .palm-two-tenths {
    width: 20%; }

  .palm-two-fifths, .palm-four-tenths {
    width: 40%; }

  .palm-three-fifths, .palm-six-tenths {
    width: 60%; }

  .palm-four-fifths, .palm-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  .palm-one-sixth, .palm-two-twelfths {
    width: 16.666%; }

  .palm-five-sixths, .palm-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  .palm-one-eighth {
    width: 12.5%; }

  .palm-three-eighths {
    width: 37.5%; }

  .palm-five-eighths {
    width: 62.5%; }

  .palm-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  .palm-one-tenth {
    width: 10%; }

  .palm-three-tenths {
    width: 30%; }

  .palm-seven-tenths {
    width: 70%; }

  .palm-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  .palm-one-twelfth {
    width: 8.333%; }

  .palm-five-twelfths {
    width: 41.666%; }

  .palm-seven-twelfths {
    width: 58.333%; }

  .palm-eleven-twelfths {
    width: 91.666%; } }
@media only screen and (min-width: 700px) and (max-width: 1149px) {
  /**
  * Whole
  */
  .lap-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  .lap-one-half, .lap-two-quarters, .lap-three-sixths, .lap-four-eighths, .lap-five-tenths, .lap-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  .lap-one-third, .lap-two-sixths, .lap-four-twelfths {
    width: 33.333%; }

  .lap-two-thirds, .lap-four-sixths, .lap-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  .lap-one-quarter, .lap-two-eighths, .lap-three-twelfths {
    width: 25%; }

  .lap-three-quarters, .lap-six-eighths, .lap-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  .lap-one-fifth, .lap-two-tenths {
    width: 20%; }

  .lap-two-fifths, .lap-four-tenths {
    width: 40%; }

  .lap-three-fifths, .lap-six-tenths {
    width: 60%; }

  .lap-four-fifths, .lap-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  .lap-one-sixth, .lap-two-twelfths {
    width: 16.666%; }

  .lap-five-sixths, .lap-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  .lap-one-eighth {
    width: 12.5%; }

  .lap-three-eighths {
    width: 37.5%; }

  .lap-five-eighths {
    width: 62.5%; }

  .lap-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  .lap-one-tenth {
    width: 10%; }

  .lap-three-tenths {
    width: 30%; }

  .lap-seven-tenths {
    width: 70%; }

  .lap-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  .lap-one-twelfth {
    width: 8.333%; }

  .lap-five-twelfths {
    width: 41.666%; }

  .lap-seven-twelfths {
    width: 58.333%; }

  .lap-eleven-twelfths {
    width: 91.666%; } }
@media only screen and (max-width: 1149px) {
  /**
  * Whole
  */
  .portable-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  .portable-one-half, .portable-two-quarters, .portable-three-sixths, .portable-four-eighths, .portable-five-tenths, .portable-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  .portable-one-third, .portable-two-sixths, .portable-four-twelfths {
    width: 33.333%; }

  .portable-two-thirds, .portable-four-sixths, .portable-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  .portable-one-quarter, .portable-two-eighths, .portable-three-twelfths {
    width: 25%; }

  .portable-three-quarters, .portable-six-eighths, .portable-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  .portable-one-fifth, .portable-two-tenths {
    width: 20%; }

  .portable-two-fifths, .portable-four-tenths {
    width: 40%; }

  .portable-three-fifths, .portable-six-tenths {
    width: 60%; }

  .portable-four-fifths, .portable-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  .portable-one-sixth, .portable-two-twelfths {
    width: 16.666%; }

  .portable-five-sixths, .portable-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  .portable-one-eighth {
    width: 12.5%; }

  .portable-three-eighths {
    width: 37.5%; }

  .portable-five-eighths {
    width: 62.5%; }

  .portable-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  .portable-one-tenth {
    width: 10%; }

  .portable-three-tenths {
    width: 30%; }

  .portable-seven-tenths {
    width: 70%; }

  .portable-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  .portable-one-twelfth {
    width: 8.333%; }

  .portable-five-twelfths {
    width: 41.666%; }

  .portable-seven-twelfths {
    width: 58.333%; }

  .portable-eleven-twelfths {
    width: 91.666%; } }
@media only screen and (min-width: 1150px) {
  /**
  * Whole
  */
  .desk-one-whole {
    width: 100%; }

  /**
  * Halves
  */
  .desk-one-half, .desk-two-quarters, .desk-three-sixths, .desk-four-eighths, .desk-five-tenths, .desk-six-twelfths {
    width: 50%; }

  /**
  * Thirds
  */
  .desk-one-third, .desk-two-sixths, .desk-four-twelfths {
    width: 33.333%; }

  .desk-two-thirds, .desk-four-sixths, .desk-eight-twelfths {
    width: 66.666%; }

  /**
  * Quarters
  */
  .desk-one-quarter, .desk-two-eighths, .desk-three-twelfths {
    width: 25%; }

  .desk-three-quarters, .desk-six-eighths, .desk-nine-twelfths {
    width: 75%; }

  /**
  * Fifths
  */
  .desk-one-fifth, .desk-two-tenths {
    width: 20%; }

  .desk-two-fifths, .desk-four-tenths {
    width: 40%; }

  .desk-three-fifths, .desk-six-tenths {
    width: 60%; }

  .desk-four-fifths, .desk-eight-tenths {
    width: 80%; }

  /**
  * Sixths
  */
  .desk-one-sixth, .desk-two-twelfths {
    width: 16.666%; }

  .desk-five-sixths, .desk-ten-twelfths {
    width: 83.333%; }

  /**
  * Eighths
  */
  .desk-one-eighth {
    width: 12.5%; }

  .desk-three-eighths {
    width: 37.5%; }

  .desk-five-eighths {
    width: 62.5%; }

  .desk-seven-eighths {
    width: 87.5%; }

  /**
  * Tenths
  */
  .desk-one-tenth {
    width: 10%; }

  .desk-three-tenths {
    width: 30%; }

  .desk-seven-tenths {
    width: 70%; }

  .desk-nine-tenths {
    width: 90%; }

  /**
  * Twelfths
  */
  .desk-one-twelfth {
    width: 8.333%; }

  .desk-five-twelfths {
    width: 41.666%; }

  .desk-seven-twelfths {
    width: 58.333%; }

  .desk-eleven-twelfths {
    width: 91.666%; } }
/* endif */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * `.brand` is a quick and simple way to apply your brand face and/or color to
 * any element using a handy helper class.
 */
.brand {
  font-family: IBM Plex Serif, Georgia, serif!important;
  color: #cc3333!important; }

.brand-face, .page {
  font-family: IBM Plex Serif, Georgia, serif!important; }

.brand-color,
.brand-colour {
  color: #cc3333!important; }

/**
 * She's all yours, cap'n... Begin importing your stuff here.
 */
/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/*-----------------------------------*\
    $IMAGES
\*-----------------------------------*/
.img--stripe {
  padding: 4px;
  -webkit-box-shadow: 0px 0px 2px #777777;
  -moz-box-shadow: 0px 0px 2px #777777;
  -ms-box-shadow: 0px 0px 2px #777777;
  -o-box-shadow: 0px 0px 2px #777777;
  box-shadow: 0px 0px 2px #777777; }

/*-----------------------------------*\
    $CODE
\*-----------------------------------*/
code {
  word-wrap: break-word;
  font-family: 'Inconsolata', Consolas, monospace;
  color: #cc3333; }

pre {
  font-family: 'Inconsolata', Consolas, monospace;
  font-size: 1em; }

.code__annotation {
  height: 31px;
  color: #aaa;
  background: #333;
  padding: 3px;
  padding-left: 29px;
  margin-top: -2px;
  overflow: hidden;
  position: absolute; }
  .code__annotation:before {
    content: '\2190  ';
    margin-left: -18px; }
  .code__annotation:hover {
    height: auto; }

/*-----------------------------------*\
    $ICONS
\*-----------------------------------*/
@font-face {
  font-family: Batch;
  src: url("../libs/batch/batch-icons-webfont.eot");
  src: url("../libs/batch/batch-icons-webfont.eot?#iefix") format("embedded-opentype"), url("../libs/batch/batch-icons-webfont.woff") format("woff"), url("../libs/batch/batch-icons-webfont.ttf") format("truetype"), url("../libs/batch/batch-icons-webfont.svg#batchregular") format("svg");
  font-weight: normal;
  font-style: normal; }
.icon {
  font-family: Batch;
  font-style: normal;
  position: relative;
  top: 1px; }

/*-----------------------------------*\
    $SITE
\*-----------------------------------*/
.site-title {
  font-family: "Oswald", serif;
  font-weight: 400; }
  @media only screen and (max-width: 1149px) {
    .site-title {
      text-align: center;
      margin-top: 32px; } }
  .site-title a {
    color: #545454;
    text-decoration: none; }

/*-----------------------------------*\
    $PAGE
\*-----------------------------------*/
.page {
  color: #2e2e2e;
  font-weight: 300;
  width: 100%;
  max-width: 978px;
  margin: 0 auto;
  background: #eeeeee; }

.page__header {
  position: relative; }
  @media only screen and (max-width: 699px) {
    .page__header {
      margin-bottom: 20px; } }

.page__nav {
  float: right;
  margin-top: -67px; }
  .page__nav .nav {
    margin-bottom: 0px; }
  @media only screen and (max-width: 1149px) {
    .page__nav {
      text-align: center;
      float: none;
      margin: 20px auto 0; } }

.page__headline {
  margin-top: 28px; }
  @media only screen and (max-width: 1149px) {
    .page__headline {
      width: 330px;
      margin: 0 auto; } }
  @media only screen and (max-width: 699px) {
    .page__headline {
      width: 235px;
      margin-bottom: 14px; } }

.page__footer {
  color: #777777;
  font-size: 12px;
  font-size: 0.6666666667rem;
  line-height: 2.6666666667;
  position: relative; }
  @media only screen and (max-width: 699px) {
    .page__footer p {
      margin: 0; } }

.page--wish-list .page__body {
  border-top: 5px solid #cc3333; }

/*-----------------------------------*\
    $NAVIGATION
\*-----------------------------------*/
.nav__item {
  font-size: 20px;
  font-size: 1.1111111111rem;
  line-height: 1.6;
  vertical-align: bottom; }

.nav__item a {
  color: #2e2e2e; }

.nav__item--current a {
  color: #cc3333; }

/*-----------------------------------*\
    $POST
\*-----------------------------------*/
.post {
  background: #eeeeee;
  padding: 8px 16px;
  margin-top: 32px;
  position: relative; }
  .post h1, .post h2, .post h3, .post h4, .post h5, .post h6 {
    font-family: "Oswald", serif;
    font-weight: 400; }
  .post ul,
  .post ol {
    margin-left: 0; }
    .post ul li,
    .post ol li {
      list-style: none;
      position: relative; }
      .post ul li:after,
      .post ol li:after {
        color: #777777;
        content: ';'; }
      .post ul li:last-child:after,
      .post ol li:last-child:after {
        content: '.'; }
      .post ul li:before,
      .post ol li:before {
        color: #777777;
        padding-right: 1ex; }
        @media only screen and (min-width: 1150px) {
          .post ul li:before,
          .post ol li:before {
            position: absolute;
            left: -2ch; } }
  .post ul li:before {
    content: '- ';
    font-weight: bold; }
  .post ol {
    counter-reset: list-counter; }
    .post ol li {
      counter-increment: list-counter; }
      .post ol li:before {
        content: counter(list-counter) ". "; }
  @media only screen and (max-width: 1149px) {
    .post {
      padding-left: 20px;
      padding-right: 20px; } }
  .post div.highlighter-shiki {
    line-height: 1.5; }
    @media only screen and (min-width: 1150px) {
      .post div.highlighter-shiki {
        width: calc(120% + 5ex);
        margin-left: calc(-10% - 5ex); } }
    @media only screen and (max-width: 1149px) {
      .post div.highlighter-shiki {
        background: #1b1f28; }
        .post div.highlighter-shiki .shiki-gutter {
          background: #242830; } }
    .post div.highlighter-shiki .shiki-gutter {
      float: left;
      width: 5ex;
      padding: 16px 8px 16px;
      color: #777777;
      text-align: right; }
    .post div.highlighter-shiki .shiki-code {
      background: #1b1f28;
      padding: 16px;
      white-space: pre;
      word-wrap: normal;
      word-break: break-all; }
      .post div.highlighter-shiki .shiki-code code {
        color: #c7c8d2; }
  .post .language-bash .shiki-gutter, .post .language-none .shiki-gutter, .post .language-terminal .shiki-gutter {
    visibility: hidden; }
    @media only screen and (max-width: 1149px) {
      .post .language-bash .shiki-gutter, .post .language-none .shiki-gutter, .post .language-terminal .shiki-gutter {
        display: none; } }

.page--oss-list .post__heading, .page--post .post__heading {
  line-height: 1.5;
  font-weight: 800;
  padding-right: 0; }
  @media only screen and (min-width: 700px) {
    .page--oss-list .post__heading, .page--post .post__heading {
      font-size: 70px;
      font-size: 3.8888888889rem;
      line-height: 1.3714285714; } }
  .page--oss-list .post__heading::after, .page--post .post__heading::after {
    content: '.';
    font-size: 1.5em;
    line-height: 0;
    color: #cc3333; }

.post__heading {
  padding-right: 100px;
  margin-bottom: 16px; }

.post__heading a {
  color: #2e2e2e; }

.post__entry {
  max-width: 700px;
  margin: 0 auto; }
  .post__entry.post__entry--excerpt {
    max-width: 100%; }
  .post__entry a {
    color: #2e2e2e;
    text-decoration: underline; }
    .post__entry a:hover {
      color: #cc3333; }
  .post__entry img {
    display: block;
    margin: 0 auto; }

.post__entry--excerpt {
  text-align: justify; }

.page--post .post__entry--excerpt, .page--oss-list .post__entry--excerpt, .post--featured .post__entry--excerpt {
  font-size: 20px;
  font-size: 1.1111111111rem;
  line-height: 1.6;
  line-height: 1.6; }
  .page--post .post__entry--excerpt a, .page--oss-list .post__entry--excerpt a, .post--featured .post__entry--excerpt a {
    color: #2e2e2e;
    text-decoration: underline; }
    .page--post .post__entry--excerpt a:hover, .page--oss-list .post__entry--excerpt a:hover, .post--featured .post__entry--excerpt a:hover {
      color: #cc3333; }

.post__metadata {
  margin-bottom: 16px; }

.post__published-date, .post__category {
  cursor: default;
  margin-right: 8px;
  padding: 1px 8px;
  background: #cc3333;
  color: #eeeeee; }

.post__category__icon {
  font-family: Batch;
  font-size: 14px;
  font-size: 0.7777777778rem;
  line-height: 2.2857142857; }

@media only screen and (max-width: 1149px) {
  .post__thumbnail {
    max-width: 100%;
    height: auto !important; } }

@media only screen and (max-width: 1149px) {
  .post__thumbnail--home {
    display: none; } }

.post__comments {
  padding: 10px; }

/*-----------------------------------*\
    $POST_LIST
\*-----------------------------------*/
.post-list p {
  margin-bottom: 0; }
.post-list .post--featured {
  margin-top: 0; }
.post-list .post {
  margin-top: 16px; }
  .post-list .post:nth-child(n+1) {
    clear: left; }
  .post-list .post:before {
    content: '';
    display: block;
    position: absolute;
    top: -5px;
    left: 0;
    width: 100%;
    height: 5px;
    background: #c33; }
.post-list .post__heading {
  padding-right: 80px; }
.post-list time {
  font-size: 12px; }
.post-list .post__heading--beta {
  line-height: 1.4; }
.post-list .post__metadata {
  position: absolute;
  top: 0;
  right: 10px;
  float: left;
  padding: 1px 8px;
  background: #cc3333;
  color: #eeeeee; }
  .post-list .post__metadata time {
    font-size: 14px;
    font-size: 0.7777777778rem;
    line-height: 2.2857142857; }
.post-list .post__date {
  float: left;
  background: #fff;
  padding: 10px;
  margin-right: 10px; }
  @media only screen and (max-width: 1149px) {
    .post-list .post__date {
      float: none;
      margin-top: 5px;
      display: inline-block; } }

.post-list--titles {
  margin-top: 16px;
  margin-left: 0;
  padding-top: 14px;
  border-top: 5px solid #cc3333;
  text-align: justify;
  font-family: "Oswald", serif;
  font-size: 24px;
  font-size: 1.3333333333rem;
  line-height: 1.3333333333;
  line-height: 1.5; }
  @media only screen and (max-width: 1149px) {
    .post-list--titles {
      padding-left: 20px;
      padding-right: 20px; } }

.post--summary {
  list-style: none;
  display: inline;
  color: #7b7b7b; }
  .post--summary.post--starred {
    color: #2e2e2e; }
    .post--summary.post--starred .post__heading {
      font-weight: 600; }
  .post--summary .post__heading {
    display: inline;
    padding-right: 0;
    font-weight: 400;
    font-family: "Oswald", serif;
    font-size: inherit;
    line-height: inherit; }
    .post--summary .post__heading a {
      color: inherit; }
  .post--summary .post__metadata {
    position: relative;
    float: none;
    display: inline-block;
    background: none;
    opacity: 0.6;
    margin: 0 16px;
    line-height: 32px;
    font-size: .8em;
    padding: 0;
    color: inherit;
    -webkit-transition: opacity 0.2s;
    -moz-transition: opacity 0.2s;
    -ms-transition: opacity 0.2s;
    -o-transition: opacity 0.2s;
    transition: opacity 0.2s; }
  .post--summary:hover .post__category {
    opacity: 1; }

.post-table {
  table-layout: fixed; }
  .post-table h2 {
    margin: 0; }
  .post-table tr {
    border-bottom: 2px groove #e3e3e3; }
  .post-table td:first-child {
    width: 90px; }
  .post-table td:nth-child(2) {
    width: 80%; }

.post__slides {
  width: 100%;
  min-height: 200px;
  aspect-ratio: 16/10;
  margin-bottom: 32px; }
  @media only screen and (min-width: 1150px) {
    .post__slides {
      width: 120%;
      margin-left: -10%; } }

/*-----------------------------------*\
    $SECTION
\*-----------------------------------*/
a.section-link {
  font-size: .8em;
  font-weight: normal;
  color: #b5b5b5;
  text-align: right;
  text-decoration: none;
  width: -40px;
  position: absolute;
  -webkit-transition: color 0.2s;
  -moz-transition: color 0.2s;
  -ms-transition: color 0.2s;
  -o-transition: color 0.2s;
  transition: color 0.2s; }
  @media only screen and (max-width: 1149px) {
    a.section-link {
      display: none; } }

h2 .section-link {
  left: -3ch;
  bottom: .1em;
  line-height: 1.0666666667; }
  h2 .section-link:before {
    content: "##"; }

h3 .section-link {
  left: -4ch;
  bottom: .1em;
  line-height: 1.3333333333; }
  h3 .section-link:before {
    content: "###"; }

h4 .section-link {
  left: -5ch;
  bottom: .1em;
  line-height: 1.6; }
  h4 .section-link:before {
    content: "####"; }

h5 .section-link {
  left: -6ch;
  bottom: .1em;
  line-height: 2; }
  h5 .section-link:before {
    content: "#####"; }

h6 .section-link {
  left: -7ch;
  bottom: .1em;
  line-height: 2.2857142857; }
  h6 .section-link:before {
    content: "######"; }

.post h1, .post h2, .post h3, .post h4, .post h5, .post h6 {
  position: relative; }
  .post h1:hover .section-link, .post h2:hover .section-link, .post h3:hover .section-link, .post h4:hover .section-link, .post h5:hover .section-link, .post h6:hover .section-link {
    text-decoration: none;
    color: #111111; }

/*-----------------------------------*\
    $SIDE
\*-----------------------------------*/
.side {
  padding: 8px;
  background: #e3e3e3;
  color: #444444;
  font-size: 14px; }
  @media only screen and (min-width: 1150px) {
    .side {
      position: absolute;
      right: -75px;
      width: 180px; } }
  @media only screen and (min-width: 1300px) {
    .side {
      right: -150px;
      width: 250px; } }
  @media only screen and (max-width: 1149px) {
    .side {
      margin: 32px 0; } }
  .side p {
    margin-bottom: 16px; }
  .side p:last-child {
    margin-bottom: 0; }
  .side:before {
    content: attr(data-type);
    display: block;
    text-transform: uppercase;
    font-family: "Oswald", serif; }
  .side ul, .side ol {
    margin-left: 3ex;
    margin-bottom: 0; }

.external {
  padding-bottom: 4px;
  margin-bottom: 32px;
  background: #f0f0f0;
  position: relative; }

.external__hero {
  border: 2px #f0f0f0;
  border-style: solid solid none; }

.external__target {
  margin: 32px 16px; }
  .external__target, .external__target a {
    position: initial !important; }
  .external__target a {
    color: inherit; }
    .external__target a:before {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0; }

.external__description {
  margin: 16px;
  font-size: 14px; }

/*-----------------------------------*\
    $BUTTONS
\*-----------------------------------*/
.pagination-nav .btn {
  background: #eeeeee;
  box-shadow: 0px 1px 3px #777777; }
.pagination-nav .btn a {
  color: #2e2e2e; }
.pagination-nav .btn--disabled {
  box-shadow: none;
  cursor: default; }

/*-----------------------------------*\
    $TICKETS
\*-----------------------------------*/
.post .tickets-list li {
  margin-bottom: 32px; }
  .post .tickets-list li::before {
    font-family: Batch;
    left: -3ch; }
  .post .tickets-list li.ticket--discuss::before {
    content: '\F00A'; }
  .post .tickets-list li.ticket--brainstorm::before {
    content: '\F12D'; }
  .post .tickets-list li.ticket--actionable::before {
    content: '\F0CA'; }
  .post .tickets-list li::after {
    content: ''; }

.ticket-icon-legenda {
  font-family: Batch; }

.ticket__title, .ticket__project {
  color: inherit;
  font-weight: bold;
  font-size: 20px; }

@-ms-viewport {
  width: device-width; }
@media print {
  body {
    font-size: 12px;
    font-size: 0.6666666667rem;
    line-height: 2.6666666667; }

  .post h2 {
    font-size: 20px;
    font-size: 1.1111111111rem;
    line-height: 1.6; }
  .post h3 {
    font-size: 16px;
    font-size: 0.8888888889rem;
    line-height: 2; }
  .post h4 {
    font-size: 14px;
    font-size: 0.7777777778rem;
    line-height: 2.2857142857; }

  .post__intro {
    font-size: 14px;
    font-size: 0.7777777778rem;
    line-height: 2.2857142857; }

  .page__header,
  .post__comments,
  .page__footer {
    display: none; } }
